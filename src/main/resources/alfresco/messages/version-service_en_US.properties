# Version service externalised display strings

version_service.err_restore_exists=The node {0} cannot be restored since it already exists.
version_service.err_not_found=The current version label of the node does not exist in the version history.
version_service.err_unsupported=The current implementation of the version service does not support the creation of branches.
version_service.err_one_preceeding=The current implementation of the version service only supports one preceeding version.
version_service.err_restore_no_version=The node {0} cannot be restore since there is no version information available for this node.
version_service.err_revert_mismatch=The version provided to revert to does not come from the nodes version history.


version_service.migration.patch.noop=Nothing to do (no version histories found in old version store)
version_service.migration.patch.complete=Completed migration of {0} (out of {1}) old version histories (to new version store) in {2} secs
version_service.migration.patch.warn.skip1=Skipped migration of {0} old version histories (migrate failed)
version_service.migration.patch.warn.skip2=Skipped migration of {0} old version histories (already migrated)

version_service.migration.delete.progress=\t\tBackground deletion of migrated version histories (from old version store) {0}% complete, estimated complete at {1}
version_service.migration.delete.complete=Completed background deletion of {0} migrated version histories (from old version store) in {1} secs
version_service.migration.delete.warn.skip1=Skipped background deletion of {0} old version histories (delete failed)
version_service.migration.delete.warn.skip2=Skipped background deletion of {0} old version histories (not migrated)