<webscript>
  <shortname>Retrieve tree of descendants (getDescendants)</shortname>
  <description>
<![CDATA[
Gets the list of descendant objects contained at one or more levels in the tree rooted at the specified folder.  Only the filter-selected properties associated with each object are returned.  The content-stream is not returned.<br>
<br>
For paging through the children (depth of 1) only use getChildren.  For returning a tree of objects of a certain depth, use getDescendants.<br>
<br>
For a repository that supports version-specific filing, this will return the version of the documents in the folder specified by the user filing the documents into the folder.  Otherwise, the latest version of the documents will be returned.<br>
<br>
Inputs:<br>
<br>
ID folderId<br>
(Optional) Enum type: Documents, Folders, Policies, Any (default)<br>
(Optional) Int depth: 1 this folder only (Default), … N folders deep, -1 for all levels<br>
(Optional) String filter: Filter specifying which properties to return.<br>
(Optional) Boolean includeAllowableActions: False (default)<br>
(Optional) Enum includeRelationships: none (default), source, target, both<br>
(Optional) String orderBy: must be a valid ORDER BY clause from the query grammer excluding ‘ORDER BY’.  Example ‘name DESC’.<br>
<br>
Outputs:<br>
<br>
Result set specified by Filter of each descendant object in the specified folder<br>
This result set will nest the contained objects<br>
<br>
Notes:<br>
<br>
The ordering and tree walk algorithm is repository-specific, but SHOULD be consistent.<br>
This method will return all objects of the specified type in the specified depth.<br>
If no type is specified, then objects of all types will be returned.<br> 
When returning the results of a call where the caller specified “Any” type,  the repository SHOULD return, at each nesting level, all folder objects first followed by other objects.<br>
If “includeAllowableActions” is TRUE, the repository will return the allowable actions for the current user for each descendant object as part of the output.<br>
"IncludeRelationships" indicates whether relationships are also returned for each returned object. If it is set to "source" or "target", relationships for which the returned object is a source, or respectively a target, will also be returned. If it is set to "both", relationships for which the returned object is either a source or a target will be returned. If it is set to "none", relationships are not returned.]]>
  </description>
  
  <!-- by object id -->
  <url>/cmis/i/{id}/descendants?types={types}&amp;filter={filter?}&amp;depth={depth?}&amp;includeAllowableActions={includeAllowableActions?}</url>
  <url>/cmis/s/{store}/i/{id}/descendants?types={types}&amp;filter={filter?}&amp;depth={depth?}&amp;includeAllowableActions={includeAllowableActions?}</url>
  <!-- by path -->
  <url>/cmis/p{path}/descendants?types={types}&amp;filter={filter?}&amp;depth={depth?}&amp;includeAllowableActions={includeAllowableActions?}</url>
  <url>/cmis/s/{store}/p{path}/descendants?types={types}&amp;filter={filter?}&amp;depth={depth?}&amp;includeAllowableActions={includeAllowableActions?}</url>
  <!-- alfresco style -->
  <url>/api/node/{store_type}/{store_id}/{id}/descendants?types={types}&amp;filter={filter?}&amp;depth={depth?}&amp;includeAllowableActions={includeAllowableActions?}</url>
  <url>/api/path/{store_type}/{store_id}/{path}/descendants?types={types}&amp;filter={filter?}&amp;depth={depth?}&amp;includeAllowableActions={includeAllowableActions?}</url>
  
  <authentication>guest</authentication>
  <transaction allow="readonly"/>
  <format default="atomfeed">argument</format>
  <family>CMIS</family>
</webscript>