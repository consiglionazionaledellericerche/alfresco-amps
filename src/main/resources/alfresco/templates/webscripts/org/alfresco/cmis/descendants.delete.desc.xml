<webscript>
  <shortname>Delete tree (deleteTree)</shortname>
  <description>
<![CDATA[
Deletes the tree rooted at specified folder (including that folder)<br>
<br>
Inputs:<br>
<br>
ID folderId<br>
Enum unfileNonfolderObjects:<br> 
o   Unfile – unfile all non-folder objects from folders in this tree. They may remain filed in other folders, or may become unfiled.<br>
o   DeleteSingleFiled – delete non-folder objects filed only in this tree, and unfile the others so they remain filed in other folders.<br>
o   Delete – delete all non-folder objects in this tree (Default)<br>
(Optional) Bool continueOnFailure: False (Default)<br>
<br>
Outputs:<br>
<br>
Collection failedToDelete - List of object IDs that failed to delete (if continueOnFailure is FALSE, then single object ID)<br>
<br>
Notes:<br>
<br>
If a non-folder object is removed from the last folder it is filed in, it can continue to survive outside of the folder structure if the repository supports the “Unfiling” capabiliity.<br>
If the specified folder is the Root Folder, throw OperationNotSupportedException.<br>
If unfiling is not supported, throw OperationNotSupportedException if deleteTree is called with Unfile.<br>
For repositories that support version-specific filing, this may delete some versions of a document but not necessarily all versions. For repositories that do not support version-specific filing, if a document is to be deleted, all versions are deleted.<br>
This is not transactional.<br>  
o   However, if DeleteSingleFiled is chosen, then having the objects unfiled is not sufficient if some objects fail to delete.  The user MUST be able to re-issue command (recover) from the error by using the same tree.<br>
Does not specify the order in which delete will happen<br>
o   However, any objects that are not deleted (e.g. because a previous object failed to delete), they MUST remain valid CMIS objects (including any applicable filing constraint for each object).<br>
]]>  
  </description>
  
  <!-- by object id -->
  <url>/cmis/i/{id}/descendants?continueOnFailure={continueOnFailure?}&amp;unfileMultiFiledDocuments={unfileMultiFiledDocuments}</url>
  <url>/cmis/s/{store}/i/{id}/descendants?continueOnFailure={continueOnFailure?}&amp;unfileMultiFiledDocuments={unfileMultiFiledDocuments}</url>
  <!-- by path -->
  <url>/cmis/p{path}/descendants?continueOnFailure={continueOnFailure?}&amp;unfileMultiFiledDocuments={unfileMultiFiledDocuments}</url>
  <url>/cmis/s/{store}/p{path}/descendants?continueOnFailure={continueOnFailure?}&amp;unfileMultiFiledDocuments={unfileMultiFiledDocuments}</url>
  <!-- alfresco style -->
  <url>/api/node/{store_type}/{store_id}/{id}/descendants?continueOnFailure={continueOnFailure?}&amp;unfileMultiFiledDocuments={unfileMultiFiledDocuments}</url>
  <url>/api/path/{store_type}/{store_id}/{path}/descendants?continueOnFailure={continueOnFailure?}&amp;unfileMultiFiledDocuments={unfileMultiFiledDocuments}</url>
  
  <authentication>user</authentication>
  <format default="atomfeed"/>
  <family>CMIS</family>
</webscript>